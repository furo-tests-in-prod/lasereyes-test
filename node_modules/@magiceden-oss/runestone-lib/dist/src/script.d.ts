/// <reference types="node" />
export declare const opcodes: {
    readonly OP_FALSE: 0;
    readonly OP_0: 0;
    readonly OP_PUSHDATA1: 76;
    readonly OP_PUSHDATA2: 77;
    readonly OP_PUSHDATA4: 78;
    readonly OP_1NEGATE: 79;
    readonly OP_RESERVED: 80;
    readonly OP_TRUE: 81;
    readonly OP_1: 81;
    readonly OP_2: 82;
    readonly OP_3: 83;
    readonly OP_4: 84;
    readonly OP_5: 85;
    readonly OP_6: 86;
    readonly OP_7: 87;
    readonly OP_8: 88;
    readonly OP_9: 89;
    readonly OP_10: 90;
    readonly OP_11: 91;
    readonly OP_12: 92;
    readonly OP_13: 93;
    readonly OP_14: 94;
    readonly OP_15: 95;
    readonly OP_16: 96;
    readonly OP_NOP: 97;
    readonly OP_VER: 98;
    readonly OP_IF: 99;
    readonly OP_NOTIF: 100;
    readonly OP_VERIF: 101;
    readonly OP_VERNOTIF: 102;
    readonly OP_ELSE: 103;
    readonly OP_ENDIF: 104;
    readonly OP_VERIFY: 105;
    readonly OP_RETURN: 106;
    readonly OP_TOALTSTACK: 107;
    readonly OP_FROMALTSTACK: 108;
    readonly OP_2DROP: 109;
    readonly OP_2DUP: 110;
    readonly OP_3DUP: 111;
    readonly OP_2OVER: 112;
    readonly OP_2ROT: 113;
    readonly OP_2SWAP: 114;
    readonly OP_IFDUP: 115;
    readonly OP_DEPTH: 116;
    readonly OP_DROP: 117;
    readonly OP_DUP: 118;
    readonly OP_NIP: 119;
    readonly OP_OVER: 120;
    readonly OP_PICK: 121;
    readonly OP_ROLL: 122;
    readonly OP_ROT: 123;
    readonly OP_SWAP: 124;
    readonly OP_TUCK: 125;
    readonly OP_CAT: 126;
    readonly OP_SUBSTR: 127;
    readonly OP_LEFT: 128;
    readonly OP_RIGHT: 129;
    readonly OP_SIZE: 130;
    readonly OP_INVERT: 131;
    readonly OP_AND: 132;
    readonly OP_OR: 133;
    readonly OP_XOR: 134;
    readonly OP_EQUAL: 135;
    readonly OP_EQUALVERIFY: 136;
    readonly OP_RESERVED1: 137;
    readonly OP_RESERVED2: 138;
    readonly OP_1ADD: 139;
    readonly OP_1SUB: 140;
    readonly OP_2MUL: 141;
    readonly OP_2DIV: 142;
    readonly OP_NEGATE: 143;
    readonly OP_ABS: 144;
    readonly OP_NOT: 145;
    readonly OP_0NOTEQUAL: 146;
    readonly OP_ADD: 147;
    readonly OP_SUB: 148;
    readonly OP_MUL: 149;
    readonly OP_DIV: 150;
    readonly OP_MOD: 151;
    readonly OP_LSHIFT: 152;
    readonly OP_RSHIFT: 153;
    readonly OP_BOOLAND: 154;
    readonly OP_BOOLOR: 155;
    readonly OP_NUMEQUAL: 156;
    readonly OP_NUMEQUALVERIFY: 157;
    readonly OP_NUMNOTEQUAL: 158;
    readonly OP_LESSTHAN: 159;
    readonly OP_GREATERTHAN: 160;
    readonly OP_LESSTHANOREQUAL: 161;
    readonly OP_GREATERTHANOREQUAL: 162;
    readonly OP_MIN: 163;
    readonly OP_MAX: 164;
    readonly OP_WITHIN: 165;
    readonly OP_RIPEMD160: 166;
    readonly OP_SHA1: 167;
    readonly OP_SHA256: 168;
    readonly OP_HASH160: 169;
    readonly OP_HASH256: 170;
    readonly OP_CODESEPARATOR: 171;
    readonly OP_CHECKSIG: 172;
    readonly OP_CHECKSIGVERIFY: 173;
    readonly OP_CHECKMULTISIG: 174;
    readonly OP_CHECKMULTISIGVERIFY: 175;
    readonly OP_NOP1: 176;
    readonly OP_NOP2: 177;
    readonly OP_CHECKLOCKTIMEVERIFY: 177;
    readonly OP_NOP3: 178;
    readonly OP_CHECKSEQUENCEVERIFY: 178;
    readonly OP_NOP4: 179;
    readonly OP_NOP5: 180;
    readonly OP_NOP6: 181;
    readonly OP_NOP7: 182;
    readonly OP_NOP8: 183;
    readonly OP_NOP9: 184;
    readonly OP_NOP10: 185;
    readonly OP_CHECKSIGADD: 186;
    readonly OP_PUBKEYHASH: 253;
    readonly OP_PUBKEY: 254;
    readonly OP_INVALIDOPCODE: 255;
};
export declare namespace script {
    type Instruction = number | Buffer;
    function compile(chunks: Array<number | Buffer>): Buffer;
    function decompile(buffer: Buffer): Generator<Instruction, boolean>;
}
//# sourceMappingURL=script.d.ts.map