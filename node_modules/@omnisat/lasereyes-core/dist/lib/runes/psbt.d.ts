import { NetworkType } from '../../types';
export declare const sendRune: ({ runeId, amount, ordinalAddress, ordinalPublicKey, paymentAddress, paymentPublicKey, toAddress, signPsbt, network, }: {
    runeId: string;
    amount: number;
    ordinalAddress: string;
    ordinalPublicKey: string;
    paymentAddress: string;
    paymentPublicKey: string;
    toAddress: string;
    signPsbt: (tx: string, psbtHex: string, psbtBase64: string, finalize?: boolean, broadcast?: boolean, network?: NetworkType) => Promise<{
        signedPsbtHex: string | undefined;
        signedPsbtBase64: string | undefined;
        txId?: string;
    } | undefined>;
    network: NetworkType;
}) => Promise<string>;
export declare const createRuneSendPsbt: ({ fromAddress, fromAddressPublicKey, fromPaymentAddress, fromPaymentPublicKey, toAddress, runeId, amount, network, }: {
    fromAddress: string;
    fromAddressPublicKey: string;
    fromPaymentAddress: string;
    fromPaymentPublicKey: string;
    toAddress: string;
    runeId: string;
    amount: number;
    network: NetworkType;
}) => Promise<{
    psbtBase64: string;
    psbtHex: string;
}>;
export declare const createRuneMintPsbt: ({ address, runeId, }: {
    address: string;
    runeId: string;
}) => Promise<{
    psbt: string;
}>;
//# sourceMappingURL=psbt.d.ts.map