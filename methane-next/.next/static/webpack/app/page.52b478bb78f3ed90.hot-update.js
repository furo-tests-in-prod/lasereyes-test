"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/api.ts":
/*!************************!*\
  !*** ./src/lib/api.ts ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mintMethane: function() { return /* binding */ mintMethane; }\n/* harmony export */ });\n// src/lib/api.ts\nconst API_URL = \"http://localhost:3001\" || 0;\nasync function mintMethane(feeRate, userAddress) {\n    try {\n        // Step 1: Call backend to create PSBT\n        const response = await fetch(\"\".concat(API_URL, \"/api/create-mint-psbt\"), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                feeRate,\n                mintData: \"2,1,77\",\n                userAddress\n            })\n        });\n        if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(\"Server error: \".concat(errorData.error || response.statusText));\n        }\n        const data = await response.json();\n        if (!data.success || !data.psbt) {\n            throw new Error(\"Server did not return a valid PSBT\");\n        }\n        // Step 2: Sign the PSBT with the wallet\n        console.log(\"Checking wallet capabilities...\");\n        console.log(\"window.oyl exists:\", !!window.oyl);\n        if (window.oyl) {\n            console.log(\"window.oyl properties:\", Object.keys(window.oyl));\n            console.log(\"window.oyl.signPsbt is a function:\", typeof window.oyl.signPsbt === \"function\");\n            console.log(\"window.oyl.pushPsbt is a function:\", typeof window.oyl.pushPsbt === \"function\");\n        }\n        if (!window.oyl || typeof window.oyl.signPsbt !== \"function\") {\n            throw new Error(\"OYL wallet does not support PSBT signing. Please update your wallet.\");\n        }\n        // Add detailed logging of the response data\n        console.log(\"Server response data:\", data);\n        console.log(\"PSBT format:\", data.format);\n        console.log(\"PSBT value:\", data.psbt.substring(0, 30) + \"...\");\n        // Use the PSBT in its original format (hex)\n        let psbtToSign = data.psbt;\n        console.log(\"Using PSBT in original format (hex)\");\n        console.log(\"Full PSBT hex:\", psbtToSign);\n        // Try to validate the PSBT hex\n        try {\n            // Check if it's a valid hex string\n            if (!/^[0-9a-fA-F]+$/.test(psbtToSign)) {\n                console.warn(\"PSBT does not appear to be a valid hex string\");\n            }\n            // Check if it starts with the PSBT magic bytes (70736274ff)\n            if (!psbtToSign.startsWith(\"70736274ff\")) {\n                console.warn(\"PSBT does not start with the expected magic bytes\");\n            }\n        } catch (e) {\n            console.error(\"Error validating PSBT:\", e);\n        }\n        console.log(\"Requesting wallet to sign PSBT...\");\n        let signedPsbt;\n        try {\n            // Try passing the PSBT as an object with a 'psbt' property\n            console.log(\"Trying to sign PSBT with object parameter...\");\n            signedPsbt = await window.oyl.signPsbt({\n                psbt: psbtToSign\n            });\n            console.log(\"PSBT signed successfully\");\n        } catch (signError) {\n            console.error(\"Error signing PSBT with object parameter:\", signError);\n            // If that fails, try passing just the PSBT string\n            try {\n                console.log(\"Trying to sign PSBT with string parameter...\");\n                signedPsbt = await window.oyl.signPsbt(psbtToSign);\n                console.log(\"PSBT signed successfully\");\n            } catch (secondSignError) {\n                console.error(\"Error signing PSBT with string parameter:\", secondSignError);\n                throw new Error(\"Failed to sign transaction: \" + (secondSignError instanceof Error ? secondSignError.message : \"User rejected or wallet error\"));\n            }\n        }\n        // Step 3: Broadcast the signed PSBT\n        if (!window.oyl || typeof window.oyl.pushPsbt !== \"function\") {\n            throw new Error(\"OYL wallet does not support transaction broadcasting. Please update your wallet.\");\n        }\n        console.log(\"Broadcasting signed transaction...\");\n        let txId;\n        try {\n            // Use the direct pushPsbt function on the oyl object\n            txId = await window.oyl.pushPsbt(signedPsbt);\n            console.log(\"Transaction broadcast successfully:\", txId);\n        } catch (broadcastError) {\n            console.error(\"Error broadcasting transaction:\", broadcastError);\n            throw new Error(\"Failed to broadcast transaction: \" + (broadcastError instanceof Error ? broadcastError.message : \"Network error\"));\n        }\n        return {\n            txId,\n            success: true\n        };\n    } catch (error) {\n        console.error(\"Error in mintMethane:\", error);\n        throw error;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api.ts\n"));

/***/ })

});